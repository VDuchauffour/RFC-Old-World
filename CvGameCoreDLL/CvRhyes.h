//Rhye
#ifndef CVRHYES_H
#define CVRHYES_H

using namespace std;
typedef list<char*> LISTCHAR;

// rhyes.h
#define EARTH_X					(100)
#define EARTH_Y					(92)

#define MAX_COM_SHRINE			(20)

#define BEGIN_WONDERS				(185) // increment if normal building (not for wonders) is added
#define BEGIN_GREAT_WONDERS			(BEGIN_WONDERS+13) // increment if a national wonder is added

#define NUM_CIVS				(63)

#define NUM_ERAS				(ERA_DIGITAL+1)

#define PAGAN_TEMPLE			((BuildingTypes)GC.getInfoTypeForString("BUILDING_PAGAN_TEMPLE"))
#define BUILDING_PALACE			((BuildingClassTypes)0)
#define BUILDING_PLAGUE			((BuildingTypes)GC.getInfoTypeForString("BUILDING_PLAGUE"))

#define UNITCLASS_SLAVE			((UnitClassTypes)GC.getInfoTypeForString("UNITCLASS_SLAVE"))

enum DoCTechs
{
	TANNING,
	MINING,
	POTTERY,
	PASTORALISM,
	AGRICULTURE,
	MYTHOLOGY,
	SAILING,

	SMELTING,
	MASONRY,
	LEVERAGE,
	PROPERTY,
	CEREMONY,
	DIVINATION,
	SEAFARING,

	ALLOYS,
	CONSTRUCTION,
	RIDING,
	ARITHMETICS,
	WRITING,
	CALENDAR,
	SHIPBUILDING,

	BLOOMERY,
	CEMENT,
	MATHEMATICS,
	CONTRACT,
	LITERATURE,
	PRIESTHOOD,
	NAVIGATION,

	GENERALSHIP,
	ENGINEERING,
	AESTHETICS,
	CURRENCY,
	LAW,
	PHILOSOPHY,
	MEDICINE,

	NOBILITY,
	STEEL,
	ARCHITECTURE,
	ARTISANRY,
	POLITICS,
	SCHOLARSHIP,
	ETHICS,

	FEUDALISM,
	FORTIFICATION,
	MACHINERY,
	ALCHEMY,
	GUILDS,
	CIVIL_SERVICE,
	THEOLOGY,

	COMMUNE,
	CROP_ROTATION,
	PAPER,
	COMPASS,
	PATRONAGE,
	EDUCATION,
	DOCTRINE,

	GUNPOWDER,
	COMPANIES,
	FINANCE,
	CARTOGRAPHY,
	HUMANITIES,
	PRINTING,
	JUDICIARY,

	FIREARMS,
	LOGISTICS,
	EXPLORATION,
	OPTICS,
	ACADEMIA,
	STATECRAFT,
	HERITAGE,

	COMBINED_ARMS,
	ECONOMICS,
	GEOGRAPHY,
	SCIENTIFIC_METHOD,
	URBAN_PLANNING,
	CIVIL_LIBERTIES,
	HORTICULTURE,

	REPLACEABLE_PARTS,
	HYDRAULICS,
	PHYSICS,
	GEOLOGY,
	MEASUREMENT,
	SOCIOLOGY,
	SOCIAL_CONTRACT,

	MACHINE_TOOLS,
	THERMODYNAMICS,
	METALLURGY,
	CHEMISTRY,
	BIOLOGY,
	REPRESENTATION,
	NATIONALISM,

	BALLISTICS,
	ENGINE,
	RAILROAD,
	ELECTRICITY,
	REFRIGERATION,
	LABOUR_UNIONS,
	JOURNALISM,

	PNEUMATICS,
	ASSEMBLY_LINE,
	REFINING,
	FILM,
	MICROBIOLOGY,
	CONSUMERISM,
	CIVIL_RIGHTS,

	INFRASTRUCTURE,
	FLIGHT,
	SYNTHETICS,
	RADIO,
	PSYCHOLOGY,
	MACROECONOMICS,
	SOCIAL_SERVICES,

	AVIATION,
	ROCKETRY,
	FISSION,
	ELECTRONICS,
	TELEVISION,
	POWER_PROJECTION,
	GLOBALISM,

	RADAR,
	SPACEFLIGHT,
	NUCLEAR_POWER,
	LASER,
	COMPUTERS,
	TOURISM,
	ECOLOGY,

	AERODYNAMICS,
	SATELLITES,
	SUPERCONDUCTORS,
	ROBOTICS,
	TELECOMMUNICATIONS,
	RENEWABLE_ENERGY,
	GENETICS,

	SUPERMATERIALS,
	FUSION,
	NANTECHNOLOGY,
	AUTOMATION,
	BIOTECHNOLOGY,

	UNIFIED_THEORY,
	ARTIFICIAL_INTELLIGENCE,

	TRANSHUMANISM,
};

enum DoCBuildings
{
	TRADING_COMPANY = BEGIN_WONDERS,
	IBERIAN_TRADING_COMPANY, 
	NATIONAL_MONUMENT, 
	NATIONAL_THEATRE, 
	NATIONAL_GALLERY, 
	NATIONAL_COLLEGE, 
	MILITARY_ACADEMY,
	SECRET_SERVICE, 

	IRONWORKS, 
	RED_CROSS, 
	NATIONAL_PARK, 
	CENTRAL_BANK, 
	SPACEPORT,
	GREAT_SPHINX, 
	PYRAMIDS, 
	ORACLE, 
	GREAT_WALL, 
	ISHTAR_GATE, 

	TERRACOTTA_ARMY, 
	HANGING_GARDENS, 
	GREAT_COTHON, 
	DUJIANGYAN, 
	APADANA_PALACE, 
	COLOSSUS, 
	STATUE_OF_ZEUS, 
	GREAT_MAUSOLEUM, 
	PARTHENON, 
	PYRAMID_OF_THE_SUN,

	TEMPLE_OF_ARTEMIS, 
	GREAT_LIGHTHOUSE, 
	MOAI_STATUES, 
	COLOSSEUM, 
	AQUA_APPIA, 
	AL_KHAZNEH, 
	TEMPLE_OF_KUKULKAN, 
	MACHU_PICCHU, 
	GREAT_LIBRARY, 
	FLOATING_GARDENS, 

	GONDESHAPUR, 
	JETAVANAMARAYA,
	NALANDA, 
	THEODOSIAN_WALLS, 
	HAGIA_SOPHIA, 
	BOROBUDUR, 
	MEZQUITA, 
	SHWEDAGON_PAYA, 
	MOUNT_ATHOS, 
	IRON_PILLAR, 

	PRAMBANAN, 
	SALSAL_BUDDHA, 
	CHEOMSEONGDAE, 
	HIMEJI_CASTLE, 
	GRAND_CANAL, 
	WAT_PREAH_PISNULOK, 
	KHAJURAHO,
	GREAT_ADOBE_MOSQUE,
	SPIRAL_MINARET, 
	DOME_OF_THE_ROCK,

	HOUSE_OF_WISDOM, 
	KRAK_DES_CHEVALIERS,
	MONOLITHIC_CHURCH, 
	UNIVERSITY_OF_SANKORE, 
	NOTRE_DAME, 
	OLD_SYNAGOGUE, 
	SAINT_SOPHIA, 
	SILVER_TREE_FOUNTAIN, 
	SANTA_MARIA_DEL_FIORE, 
	ALAMUT, 

	SAN_MARCO_BASILICA, 
	SISTINE_CHAPEL, 
	PORCELAIN_TOWER,
	TOPKAPI_PALACE, 
	KREMLIN, 
	SAINT_THOMAS_CHURCH, 
	VIJAYA_STAMBHA, 
	GUR_E_AMIR, 
	RED_FORT, 
	TAJ_MAHAL, 

	FORBIDDEN_PALACE, 
	VERSAILLES, 
	BLUE_MOSQUE,
	ESCORIAL, 
	TORRE_DE_BELEM, 
	POTALA_PALACE, 
	OXFORD_UNIVERSITY, 
	HARMANDIR_SAHIB, 
	SAINT_BASILS_CATHEDRAL, 
	BOURSE, 

	ITSUKUSHIMA_SHRINE, 
	IMAGE_OF_THE_WORLD_SQUARE, 
	LOUVRE,
	EMERALD_BUDDHA, 
	SHALIMAR_GARDENS, 
	TRAFALGAR_SQUARE, 
	HERMITAGE, 
	GUADALUPE_BASILICA, 
	SALT_CATHEDRAL, 
	AMBER_ROOM, 

	STATUE_OF_LIBERTY, 
	BRANDENBURG_GATE, 
	ABBEY_MILLS,
	BELL_ROCK_LIGHTHOUSE, 
	CHAPULTEPEC_CASTLE,
	EIFFEL_TOWER, 
	WESTMINSTER_PALACE, 
	TRIUMPHAL_ARCH, 
	MENLO_PARK, 
	CRYSTAL_PALACE, 

	TSUKIJI_FISH_MARKET, 
	BROOKLYN_BRIDGE, 
	HOLLYWOOD, 
	EMPIRE_STATE_BUILDING,
	LAS_LAJAS_SANCTUARY, 
	PALACE_OF_NATIONS, 
	MOLE_ANTONELLIANA, 
	NEUSCHWANSTEIN, 
	FRONTENAC,
	WEMBLEY, 

	LUBYANKA, 
	CRISTO_REDENTOR, 
	METROPOLITAIN, 
	NOBEL_PRIZE, 
	GOLDEN_GATE_BRIDGE, 
	BLETCHLEY_PARK, 
	SAGRADA_FAMILIA, 
	CERN, 
	ITAIPU_DAM, 
	GRACELAND, 

	CN_TOWER, 
	PENTAGON, 
	UNITED_NATIONS, 
	CRYSTAL_CATHEDRAL, 
	MOTHERLAND_CALLS,
	BERLAYMONT, 
	WORLD_TRADE_CENTER, 
	ATOMIUM, 
	IRON_DOME, 
	HARBOUR_OPERA, 

	LOTUS_TEMPLE, 
	GLOBAL_SEED_VAULT, 
	GARDENS_BY_THE_BAY, 
	BURJ_KHALIFA, 
	HUBBLE_SPACE_TELESCOPE,
	CHANNEL_TUNNEL, 
	SKYTREE, 
	ORIENTAL_PEARL_TOWER, 
	DELTA_WORKS, 

	SPACE_ELEVATOR, 
	LARGE_HADRON_COLLIDER, 
	ITER
};

enum DoCEras
{
	ERA_ANCIENT,
	ERA_CLASSICAL,
	ERA_MEDIEVAL,
	ERA_RENAISSANCE,
	ERA_INDUSTRIAL,
	ERA_GLOBAL,
	ERA_DIGITAL,
	ERA_MIDDLE_EAST,
	ERA_EAST_ASIA,
	ERA_SOUTH_ASIA,
	ERA_NATIVE_AMERICA,
};

enum Regions
{
    REGION_ICELAND,
    REGION_THE_ISLES,
    REGION_THE_HIGHLANDS,
    REGION_THE_LOWLANDS,
    REGION_ULSTER,
    REGION_CONNAUGHT,
    REGION_LEINSTER,
    REGION_MUNSTER,
    REGION_NORTHUMBRIA,
    REGION_THE_MIDLANDS,
    REGION_WALES,
    REGION_EAST_ANGLIA,
    REGION_KENT_ESSEX,
    REGION_WESSEX,
    REGION_CORNWALL,
    REGION_VESTLANDET,
    REGION_TRONDELAG,
    REGION_JAEMTLAND,
    REGION_NORRLAND,
    REGION_SVEALAND,
    REGION_OSTLANDET,
    REGION_GEATLAND,
    REGION_SCANIA,
    REGION_GOTLAND,
    REGION_DENMARK,
    REGION_FINLAND,
    REGION_KARELIA,
    REGION_ONEGA,
    REGION_DVINA,
    REGION_VOLGA,
    REGION_BELOOZERO,
    REGION_NOVGOROD,
    REGION_INGRIA,
    REGION_PSKOV,
    REGION_VALDAI,
    REGION_TVER,
    REGION_MOSKVA,
    REGION_SUZDAL,
    REGION_RYAZAN,
    REGION_VORONEZH,
    REGION_OKA_DESNA_UPLANDS,
    REGION_SMOLENSK,
    REGION_WHITE_RUS,
    REGION_MSTISLAW,
    REGION_LATGALIA,
    REGION_LIVLAND,
    REGION_ESTLAND,
    REGION_COURLAND,
    REGION_SAMOGITIA,
    REGION_LITHUANIA,
    REGION_PRUSSIA,
    REGION_BLACK_RUS,
    REGION_POLESSIA,
    REGION_SEVERIA,
    REGION_SLOBODA_UKRAINE,
    REGION_DON,
    REGION_UKRAINE,
    REGION_ZAPOROGIA,
    REGION_TAURIA,
    REGION_AZOV,
    REGION_KUBAN,
    REGION_CAUCASUS_COAST,
    REGION_CRIMEA,
    REGION_KIEV,
    REGION_VOLHYNIA,
    REGION_PODLACHIA,
    REGION_MAZOVIA,
    REGION_SLESWICK,
    REGION_HOLSTEIN,
    REGION_MECKLENBURG,
    REGION_POMERANIA,
    REGION_POMERELIA,
    REGION_BREMEN_FRISIA,
    REGION_EASTPHALIA,
    REGION_BRANDEBURG,
    REGION_GREATER_POLAND,
    REGION_WESTPHALIA,
    REGION_HESSE,
    REGION_THURINGIA,
    REGION_MEISSEN_LUSATIA,
    REGION_SILESIA,
    REGION_RHINELAND,
    REGION_PALATINATE,
    REGION_FRANCONIA,
    REGION_SWABIA,
    REGION_BAVARIA,
    REGION_BOHEMIA,
    REGION_MORAVIA,
    REGION_AUSTRIA,
    REGION_UPPER_HUNGARY,
    REGION_LESSER_POLAND,
    REGION_GALICIA,
    REGION_PODOLIA,
    REGION_MOLDOVIA,
    REGION_YEDISAN,
    REGION_BUDJAK,
    REGION_DOBRUDJA,
    REGION_TRANSYLVANIA,
    REGION_WALLACHIA,
    REGION_HUNGARY,
    REGION_PANNONIA,
    REGION_BANAT,
    REGION_SYRMIA,
    REGION_CROATIA_SLAVONIA,
    REGION_ISTRIA,
    REGION_STYRIA_CARINTHIA,
    REGION_VENETO,
    REGION_DALMATIA,
    REGION_BOSNIA,
    REGION_RASCIA,
    REGION_TORLAKIA,
    REGION_MOESIA,
    REGION_THRACE,
    REGION_MACEDONIA,
    REGION_ARBERIA,
    REGION_EPIRUS,
    REGION_THESSALY,
    REGION_ATTICA,
    REGION_MOREA,
    REGION_IONIAN_ISLANDS,
    REGION_AEGEAN_ISLANDS,
    REGION_DARDANELLES,
    REGION_IONIA,
    REGION_RHODES,
    REGION_CRETE,
    REGION_BOSPORUS,
    REGION_BITHYNIA,
    REGION_PHRYGIA,
    REGION_LYCIA,
    REGION_PAMPHYLIA,
    REGION_ANATOLICON,
    REGION_GALATIA,
    REGION_PAPHLAGONIA,
    REGION_PONTUS,
    REGION_CHALDIA,
    REGION_CAPPADOCIA,
    REGION_ARMENIA,
    REGION_CILICIA,
    REGION_NORTHERN_SYRIA,
    REGION_ANTIOCH,
    REGION_SYRIA,
    REGION_ARABIA,
    REGION_LEBANON,
    REGION_HEJAZ,
    REGION_TRANSJORDAN,
    REGION_PALESTINE,
    REGION_CYPRUS,
    REGION_SINAI,
    REGION_LOWER_EGYPT,
    REGION_UPPER_EGYPT,
    REGION_CYRENAICA,
    REGION_TRIPOLITANIA,
    REGION_IFRIQIYA,
    REGION_BARBARY,
    REGION_MAURETANIA,
    REGION_RIF,
    REGION_FES,
    REGION_ATLANTIC_MOROCCO,
    REGION_SOUSS,
    REGION_MARRAKESH,
    REGION_ATLAS,
    REGION_CANARIES,
    REGION_MADEIRA,
    REGION_AZORES,
    REGION_MALTA,
    REGION_SICILY,
    REGION_CALABRIA,
    REGION_APULIA,
    REGION_CAMPANIA,
    REGION_MARCHE,
    REGION_LAZIO,
    REGION_TUSCANY,
    REGION_EMILIA_ROMAGNA,
    REGION_LIGURIA,
    REGION_PIEDMONT,
    REGION_LOMBARDY,
    REGION_VERONA,
    REGION_SARDINIA,
    REGION_TYROL,
    REGION_HELVETIA,
    REGION_ALSACE,
    REGION_LORRAINE,
    REGION_FRISIA,
    REGION_HOLLAND,
    REGION_BRABANT,
    REGION_WALLONIA,
    REGION_FLANDERS,
    REGION_PICARDY_ARTOIS,
    REGION_CHAMPAGNE,
    REGION_ILE_DE_FRANCE,
    REGION_NORMANDY,
    REGION_BRITTANY,
    REGION_POITOU,
    REGION_ANJOU,
    REGION_BERRY,
    REGION_BURGUNDY,
    REGION_SAVOY,
    REGION_LYONNAIS,
    REGION_AUVERGNE,
    REGION_GASCONY,
    REGION_LANGUEDOC,
    REGION_DAUPHINY,
    REGION_PROVENCE,
    REGION_CORSICA,
    REGION_CATALONIA,
    REGION_ARAGON,
    REGION_NAVARRE,
    REGION_CANTABRIA,
    REGION_ASTURIAS,
    REGION_GALLAAECIA,
    REGION_PORTUGAL,
    REGION_LUSITANIA,
    REGION_LEON,
    REGION_CASTILLE,
    REGION_LA_MANCHA,
    REGION_VALENCIA,
    REGION_EXTREMADURA,
    REGION_ANDALUSIA,
    REGION_MURICA,
    REGION_GRANADA,
    REGION_BALEARES,
    REGION_SEPTIMANIA,
    REGION_SAHARA,
	NUM_REGIONS,
};

enum RegionGroup
{
	NO_REGION_GROUP = -1,
	REGION_GROUP_EUROPE,
	REGION_GROUP_MIDDLE_EAST,
	REGION_GROUP_NORTH_AFRICA,
	NUM_REGION_GROUPS,
};

enum ECSArtStyles
{
	ARTSTYLE_AFRICA,
	ARTSTYLE_ANGLO_AMERICA,
	ARTSTYLE_ARABIA,
	ARTSTYLE_ASIA,
	ARTSTYLE_BARBARIAN,
	ARTSTYLE_CRESCENT,
	ARTSTYLE_EGYPT,
	ARTSTYLE_EUROPE,
	ARTSTYLE_GRECO_ROMAN,
	ARTSTYLE_INDIA,
	ARTSTYLE_IBERIA,
	ARTSTYLE_JAPAN,
	ARTSTYLE_MESO_AMERICA,
	ARTSTYLE_MONGOLIA,
	ARTSTYLE_NATIVE_AMERICA,
	ARTSTYLE_NORSE,
	ARTSTYLE_RUSSIA,
	ARTSTYLE_SOUTH_AMERICA,
	ARTSTYLE_SOUTH_EAST_ASIA,
	ARTSTYLE_SOUTH_PACIFIC,
};

#endif	// CVRHYES_H

static const int lTechLeaderPenalty[NUM_ERAS] = {0, 0, 20, 25, 25, 25, 25};
static const int lTechBackwardsBonus[NUM_ERAS] = {0, 20, 30, 40, 50, 50, 50};

// Leoreth: order of persecution
static const int persecutionOrder[NUM_RELIGIONS][NUM_RELIGIONS-1] = 
{
	// Judaism
	{HINDUISM, BUDDHISM, TAOISM, CONFUCIANISM, ZOROASTRIANISM, ISLAM, PROTESTANTISM, CATHOLICISM, ORTHODOXY},
	// Orthodoxy
	{ISLAM, PROTESTANTISM, CATHOLICISM, JUDAISM, ZOROASTRIANISM, HINDUISM, BUDDHISM, CONFUCIANISM, TAOISM},
	// Catholicism
	{ISLAM, PROTESTANTISM, ORTHODOXY, JUDAISM, ZOROASTRIANISM, HINDUISM, BUDDHISM, CONFUCIANISM, TAOISM},
	// Protestantism
	{ISLAM, CATHOLICISM, ORTHODOXY, JUDAISM, ZOROASTRIANISM, HINDUISM, BUDDHISM, CONFUCIANISM, TAOISM},
	// Islam
	{ZOROASTRIANISM, HINDUISM, PROTESTANTISM, CATHOLICISM, ORTHODOXY, JUDAISM, BUDDHISM, CONFUCIANISM, TAOISM},
	// Hinduism
	{ISLAM, ORTHODOXY, PROTESTANTISM, CATHOLICISM, JUDAISM, CONFUCIANISM, TAOISM, ZOROASTRIANISM, BUDDHISM},
	// Buddhism
	{ORTHODOXY, PROTESTANTISM, CATHOLICISM, JUDAISM, ZOROASTRIANISM, TAOISM, ISLAM, CONFUCIANISM, HINDUISM},
	// Confucianism
	{ISLAM, ORTHODOXY, PROTESTANTISM, CATHOLICISM, JUDAISM, ZOROASTRIANISM, HINDUISM, BUDDHISM, TAOISM},
	// Taoism
	{ISLAM, ORTHODOXY, PROTESTANTISM, CATHOLICISM, JUDAISM, ZOROASTRIANISM, HINDUISM, BUDDHISM, CONFUCIANISM},
	// Zoroastrianism
	{ISLAM, PROTESTANTISM, CATHOLICISM, ORTHODOXY, JUDAISM, HINDUISM, BUDDHISM, CONFUCIANISM, TAOISM},
};

// Leoreth: persecution priority
static const int persecutionValue[NUM_RELIGIONS][NUM_RELIGIONS] =
{
	// JUD ORT CAT PRO ISL HIN BUD CON TAO ZOR
	{  -1,  1,  1,  1,  1,  1,  1,  1,  1,  1 }, // Judaism
	{   1, -1,  3,  3,  4,  1,  1,  1,  1,  2 }, // Orthodoxy
	{   2,  2, -1,  3,  4,  1,  1,  1,  1,  2 }, // Catholicism
	{   3,  2,  3, -1,  4,  1,  1,  1,  1,  2 }, // Protestantism
	{   1,  2,  2,  2, -1,  3,  1,  1,  1,  4 }, // Islam
	{   1,  3,  3,  3,  4, -1,  0,  1,  1,  2 }, // Hinduism
	{   1,  3,  3,  3,  4,  0, -1,  1,  1,  2 }, // Buddhism
	{   1,  2,  2,  2,  3,  1,  1, -1,  0,  1 }, // Confucianism
	{   1,  2,  2,  2,  3,  1,  1,  0, -1,  1 }, // Taoism
	{   1,  3,  3,  3,  4,  1,  1,  1,  1, -1 }, // Zoroastrianism
};