name: Build CvGameCoreDLL

on:
  push:
    paths:
      - "CvGameCoreDLL/**"
  pull_request:
    paths:
      - "CvGameCoreDLL/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Visual C++ Toolkit 2003
        shell: powershell
        run: |
          # Download Visual C++ Toolkit 2003 with better error handling
          $setupFile = "$env:TEMP\VCToolkitSetup.exe"
          Write-Host "Downloading Visual C++ Toolkit setup..."

          try {
            Invoke-WebRequest -Uri "http://kael.civfanatics.net/files/VCToolkitSetup.exe" -OutFile $setupFile -UseBasicParsing
            
            # Verify the file was downloaded and has content
            if (Test-Path $setupFile) {
              $fileSize = (Get-Item $setupFile).length
              Write-Host "Downloaded file size: $fileSize bytes"
              
              if ($fileSize -gt 0) {
                Write-Host "Installing Visual C++ Toolkit..."
                & $setupFile /s /v"/qb"
                Start-Sleep -s 120
                
                # Create lib directory if it doesn't exist
                $libDir = "C:\Program Files (x86)\Microsoft Visual C++ Toolkit 2003\lib"
                if (-not (Test-Path $libDir)) {
                  New-Item -ItemType Directory -Path $libDir -Force
                }
                
                # Download required library files
                Write-Host "Downloading library files..."
                Invoke-WebRequest -Uri "http://kael.civfanatics.net/files/msvcrt.lib" -OutFile "$libDir\msvcrt.lib" -UseBasicParsing
                Invoke-WebRequest -Uri "http://kael.civfanatics.net/files/msvcrtd.lib" -OutFile "$libDir\msvcrtd.lib" -UseBasicParsing
                Invoke-WebRequest -Uri "http://kael.civfanatics.net/files/msvcprt.lib" -OutFile "$libDir\msvcprt.lib" -UseBasicParsing
                
                Write-Host "Setup completed successfully"
              } else {
                Write-Error "Downloaded file is empty"
                exit 1
              }
            } else {
              Write-Error "Failed to download setup file"
              exit 1
            }
          } catch {
            Write-Error "Error during download or installation: $($_.Exception.Message)"
            exit 1
          }

      - name: Build project
        shell: cmd
        run: |
          msbuild CvGameCoreDLL/CvGameCoreDLL.vcxproj /p:Configuration=Release /verbosity:minimal

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: CvGameCoreDLL
          path: Assets/CvGameCoreDLL.dll

      - name: Comment on PR (success)
        if: success() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ Build succeeded! CvGameCoreDLL.dll has been built successfully.'
            })

      - name: Comment on PR (failure)
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ Build failed! Please check the logs for more details.'
            })
